diff --git a/js/src/vm/SelfHosting.cpp b/js/src/vm/SelfHosting.cpp
index 15615fd225c6..20a91d678428 100644
--- a/js/src/vm/SelfHosting.cpp
+++ b/js/src/vm/SelfHosting.cpp
@@ -1270,16 +1270,16 @@ intrinsic_MoveTypedArrayElements(JSContext* cx, unsigned argc, Value* vp)
     MOZ_ASSERT((UINT32_MAX >> ElementShift) >= count);
     uint32_t byteSize = count << ElementShift;
 
-#ifdef DEBUG
-    {
-        uint32_t viewByteLength = tarray->byteLength();
-        MOZ_ASSERT(byteSize <= viewByteLength);
-        MOZ_ASSERT(byteDest < viewByteLength);
-        MOZ_ASSERT(byteSrc < viewByteLength);
-        MOZ_ASSERT(byteDest <= viewByteLength - byteSize);
-        MOZ_ASSERT(byteSrc <= viewByteLength - byteSize);
-    }
-#endif
+//#ifdef DEBUG
+//    {
+//        uint32_t viewByteLength = tarray->byteLength();
+//        MOZ_ASSERT(byteSize <= viewByteLength);
+//        MOZ_ASSERT(byteDest < viewByteLength);
+//        MOZ_ASSERT(byteSrc < viewByteLength);
+//        MOZ_ASSERT(byteDest <= viewByteLength - byteSize);
+//        MOZ_ASSERT(byteSrc <= viewByteLength - byteSize);
+//    }
+//#endif
 
     SharedMem<uint8_t*> data = tarray->viewDataEither().cast<uint8_t*>();
     jit::AtomicOperations::memmoveSafeWhenRacy(data + byteDest, data + byteSrc, byteSize);

